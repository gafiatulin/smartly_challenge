'use strict'var rl = require('./rate-limiter.js');function getThrottler(api){  if(api.rl) return api.rl;  else {    api.rl = new rl(this.rate);    return api.rl;  }};let ThrottlingApiClient = function(){  this.isReady = function(){    return (this.rate !== undefined || this.rl !== undefined) &&            this.endpoint !== undefined &&            this.token !== undefined  };};ThrottlingApiClient.prototype.init = function(endpoint, token, rate){  if(this.endpoint === undefined && typeof endpoint === "string" || endpoint instanceof String) this.endpoint = endpoint;  if(this.token === undefined && typeof token === "string" || token instanceof String) this.token = token;  if(rate !== undefined && rate.numberOfCalls !== undefined && rate.duration !== undefined) this.rate = rate;  if(this.isReady) this.rl = new rl(this.rate);}ThrottlingApiClient.prototype.get = function(path){  let self = this;  //ToDo:};ThrottlingApiClient.prototype.post = function(path, param){  let self = this;  //ToDo:}ThrottlingApiClient.prototype.put = function(path, param){  let self = this;  //ToDo:};ThrottlingApiClient.prototype.delete = function(path){  let self = this;  //ToDo:};module.exports = new ThrottlingApiClient();